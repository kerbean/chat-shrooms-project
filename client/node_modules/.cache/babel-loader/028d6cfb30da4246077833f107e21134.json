{"ast":null,"code":"import _classCallCheck from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/src/components/Form/Form.js\";\nimport React, { Component } from 'react';\nimport './Form.css';\nimport Message from '../Message/Message';\nimport firebase from 'firebase';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n    _this.state = {\n      userName: 'Stranger',\n      message: '',\n      list: [],\n      messageRef: ''\n    }; // if (this.props.category === 'random') {\n    //     this.messageRef = firebase.database().ref().child('messages');\n    // }\n    // else if (this.props.category === 'disney') {\n    //     this.messageRef = firebase.database().ref().child('disney');\n    // }\n    // else {\n    //     this.messageRef = firebase.database().ref().child('messages');\n    // }\n    // console.log(\"Props Cat : \" + this.messageRef);\n\n    _this.setMessageRef();\n\n    _this.listenMessages();\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"setMessageRef\",\n    value: function setMessageRef() {\n      console.log(\"Props Category: \" + this.props.category);\n\n      if (this.props.category === 'random') {\n        this.messageRef = firebase.database().ref().child('messages'); // this.setState({ messageRef: firebase.database().ref().child('messages') });\n      } else if (this.props.category === 'disney') {\n        this.messageRef = firebase.database().ref().child('disney'); // this.setState({ messageRef: firebase.database().ref().child('disney') });\n      } else if (this.props.category === 'tvseries') {\n        this.messageRef = firebase.database().ref().child('tvseries');\n      } else if (this.props.category === 'games') {\n        this.messageRef = firebase.database().ref().child('games');\n      } else {\n        this.messageRef = firebase.database().ref().child('messages');\n      }\n\n      console.log(\"Props Cat : \" + this.messageRef);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log(\"Receive Props : \" + nextProps.json);\n\n      if (nextProps.user) {\n        this.setState({\n          'userName': nextProps.user.displayName\n        });\n      }\n\n      this.setMessageRef();\n      this.listenMessages();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        'userName': this.props.user.displayName\n      });\n      this.setMessageRef.bind(this);\n      this.listenMessages();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        message: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend() {\n      if (this.state.message) {\n        console.log(\"state msg: \" + this.state.message);\n        var newItem = {\n          userName: this.state.userName,\n          message: this.state.message\n        };\n        this.messageRef.push(newItem);\n        console.log(\"HERE 2\");\n        this.setState({\n          message: ''\n        });\n        console.log(\"HERE 3\");\n      }\n    }\n  }, {\n    key: \"handleKeyPress\",\n    value: function handleKeyPress(event) {\n      if (event.key !== 'Enter') return;\n      this.handleSend();\n    }\n  }, {\n    key: \"listenMessages\",\n    value: function listenMessages() {\n      var _this2 = this;\n\n      console.log(\"Listen Msgs - Message Ref : \" + this.messageRef);\n      this.messageRef.limitToLast(10).on('value', function (message) {\n        _this2.setState({\n          list: Object.values(message.val())\n        });\n      }); // this.state.messageRef\n      //     .limitToLast(10)\n      //     .on('value', message => {\n      //         this.setState({\n      //             list: Object.values(message.val()),\n      //         });\n      //     });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.list.map(function (item, index) {\n        return React.createElement(Message, {\n          key: index,\n          message: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        placeholder: \"Drop a great entrance!\",\n        value: this.state.message,\n        onChange: this.handleChange.bind(this),\n        onKeyPress: this.handleKeyPress.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"form-btn\",\n        onClick: this.handleSend.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"SEND\")));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport { Form as default };","map":{"version":3,"sources":["/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/src/components/Form/Form.js"],"names":["React","Component","Message","firebase","Form","props","state","userName","message","list","messageRef","setMessageRef","listenMessages","console","log","category","database","ref","child","nextProps","json","user","setState","displayName","bind","event","target","value","newItem","push","key","handleSend","limitToLast","on","Object","values","val","map","item","index","handleChange","handleKeyPress"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Form.css';\nimport Message from '../Message/Message';\nimport firebase from 'firebase';\nexport default class Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: 'Stranger',\n            message: '',\n            list: [],\n            messageRef: '',\n        };\n        // if (this.props.category === 'random') {\n        //     this.messageRef = firebase.database().ref().child('messages');\n        // }\n        // else if (this.props.category === 'disney') {\n        //     this.messageRef = firebase.database().ref().child('disney');\n        // }\n        // else {\n        //     this.messageRef = firebase.database().ref().child('messages');\n        // }\n        // console.log(\"Props Cat : \" + this.messageRef);\n        this.setMessageRef();\n        this.listenMessages();\n    }\n\n    setMessageRef() {\n        console.log(\"Props Category: \" + this.props.category);\n        if (this.props.category === 'random') {\n            this.messageRef = firebase.database().ref().child('messages');\n            // this.setState({ messageRef: firebase.database().ref().child('messages') });\n        }\n        else if (this.props.category === 'disney') {\n            this.messageRef = firebase.database().ref().child('disney');\n            // this.setState({ messageRef: firebase.database().ref().child('disney') });\n        }\n        else if (this.props.category === 'tvseries') {\n            this.messageRef = firebase.database().ref().child('tvseries');\n        }\n        else if (this.props.category === 'games') {\n            this.messageRef = firebase.database().ref().child('games');\n        }\n        else {\n            this.messageRef = firebase.database().ref().child('messages');\n        }\n        console.log(\"Props Cat : \" + this.messageRef);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log(\"Receive Props : \" + nextProps.json);\n        if (nextProps.user) {\n            this.setState({ 'userName': nextProps.user.displayName });\n        }\n        this.setMessageRef();\n        this.listenMessages();\n    }\n\n    componentDidMount() {\n        this.setState({ 'userName': this.props.user.displayName });\n        this.setMessageRef.bind(this);\n        this.listenMessages();\n    }\n\n    handleChange(event) {\n        this.setState({ message: event.target.value });\n    }\n    handleSend() {\n        if (this.state.message) {\n            console.log(\"state msg: \" + this.state.message);\n            var newItem = {\n                userName: this.state.userName,\n                message: this.state.message,\n            }\n            this.messageRef.push(newItem);\n            console.log(\"HERE 2\");\n            this.setState({ message: '' });\n            console.log(\"HERE 3\");\n        }\n    }\n    handleKeyPress(event) {\n        if (event.key !== 'Enter') return;\n        this.handleSend();\n    }\n    listenMessages() {\n        console.log(\"Listen Msgs - Message Ref : \" + this.messageRef);\n        this.messageRef\n            .limitToLast(10)\n            .on('value', message => {\n                this.setState({\n                    list: Object.values(message.val()),\n                });\n            });\n        // this.state.messageRef\n        //     .limitToLast(10)\n        //     .on('value', message => {\n        //         this.setState({\n        //             list: Object.values(message.val()),\n        //         });\n        //     });\n    }\n    render() {\n        return (\n            <div className=\"form\">\n                <div className=\"form-msg\">\n                    {this.state.list.map((item, index) =>\n                        <Message key={index} message={item} />\n                    )}\n                </div>\n                <div className=\"form-row\">\n                    <input\n                        className=\"form-input\"\n                        type=\"text\"\n                        placeholder=\"Drop a great entrance!\"\n                        value={this.state.message}\n                        onChange={this.handleChange.bind(this)}\n                        onKeyPress={this.handleKeyPress.bind(this)}\n                    />\n                    <button\n                        className=\"form-btn\"\n                        onClick={this.handleSend.bind(this)}\n                    >\n                        SEND\n          </button>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}