{"ast":null,"code":"import _classCallCheck from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/src/components/Form/Form.js\";\nimport React, { Component } from 'react';\nimport './Form.css';\nimport Message from '../Message/Message';\nimport firebase from 'firebase';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n    _this.state = {\n      userName: 'Stranger',\n      message: '',\n      list: [],\n      messageRef: '',\n      nickDb: '',\n      email: ''\n    }; // if (this.props.category === 'random') {\n    //     this.messageRef = firebase.database().ref().child('messages');\n    // }\n    // else if (this.props.category === 'disney') {\n    //     this.messageRef = firebase.database().ref().child('disney');\n    // }\n    // else {\n    //     this.messageRef = firebase.database().ref().child('messages');\n    // }\n    // console.log(\"Props Cat : \" + this.messageRef);\n\n    _this.setMessageRef();\n\n    _this.listenMessages();\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"setMessageRef\",\n    value: function setMessageRef() {\n      console.log(\"Props Category: \" + this.props.category);\n\n      if (this.props.category === 'random') {\n        this.messageRef = firebase.database().ref().child('messages'); // this.setState({ messageRef: firebase.database().ref().child('messages') });\n      } // else if (this.props.category === 'disney') {\n      //     this.messageRef = firebase.database().ref().child('disney');\n      //     // this.setState({ messageRef: firebase.database().ref().child('disney') });\n      // }\n      else if (this.props.category === 'tvseries') {\n          this.messageRef = firebase.database().ref().child('tvseries');\n        } else if (this.props.category === 'games') {\n          this.messageRef = firebase.database().ref().child('games');\n        } else {\n          this.messageRef = firebase.database().ref().child('messages');\n        }\n\n      console.log(\"Props Cat : \" + this.messageRef);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log(\"Receive Props : \" + nextProps.json);\n\n      if (nextProps.user) {\n        this.setState({\n          'userName': nextProps.user.displayName\n        });\n      }\n\n      if (this.props.dbdata) {\n        console.log(\"DBDATA -- : \", this.props.dbdata);\n        this.setState({\n          'nickDb': this.props.dbdata\n        });\n      } else {\n        console.log(\"NICKDB -- : \", this.props.nickDb.nickname);\n        this.setState({\n          'nickDb': this.props.nickDb.nickname\n        });\n      }\n\n      this.setMessageRef();\n      this.listenMessages();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"FORM JS - COMPONENTDIDMOUNT-- START\");\n      this.setState({\n        'userName': this.props.user.displayName\n      });\n      this.setState({\n        'email': this.props.user.email\n      });\n\n      if (this.props.dbdata) {\n        console.log(\"DBDATA -- : \", this.props.dbdata);\n        this.setState({\n          'nickDb': this.props.dbdata\n        });\n      } else {\n        console.log(\"NICKDB -- : \", this.props.nickDb.nickname);\n        this.setState({\n          'nickDb': this.props.nickDb.nickname\n        });\n      } // console.log(\"ALLUSERSSSSS: \" + JSON.stringify(this.props.allUsers));\n\n\n      this.setMessageRef.bind(this);\n      this.listenMessages();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        message: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSend\",\n    value: function handleSend() {\n      if (this.state.message) {\n        console.log(\"state msg: \" + this.state.message);\n        var newItem = {\n          userName: this.state.userName,\n          message: this.state.message,\n          email: this.state.email,\n          nick: this.state.nickDb\n        };\n        this.messageRef.push(newItem);\n        console.log(\"HERE 2\");\n        this.setState({\n          message: ''\n        });\n        console.log(\"HERE 3\");\n      }\n    }\n  }, {\n    key: \"handleKeyPress\",\n    value: function handleKeyPress(event) {\n      if (event.key !== 'Enter') return;\n      this.handleSend();\n    }\n  }, {\n    key: \"listenMessages\",\n    value: function listenMessages() {\n      var _this2 = this;\n\n      console.log(\"Listen Msgs - Message Ref : \" + this.messageRef);\n      this.messageRef.limitToLast(8).on('value', function (message) {\n        _this2.setState({\n          list: Object.values(message.val())\n        }); // console.log(\"LIST: \" + JSON.stringify(this.state.list));\n\n      }); // this.state.messageRef\n      //     .limitToLast(10)\n      //     .on('value', message => {\n      //         this.setState({\n      //             list: Object.values(message.val()),\n      //         });\n      //     });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, console.log(\"DBDATA : \" + this.props.dbdata), this.state.list.map(function (item, index) {\n        return React.createElement(Message, {\n          dbdata: _this3.props.dbdata,\n          dbemail: _this3.state.dbemail,\n          allUsers: _this3.props.allUsers,\n          nickDb: _this3.props.nickDb,\n          key: index,\n          message: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        placeholder: \"Drop a great entrance!\",\n        value: this.state.message,\n        onChange: this.handleChange.bind(this),\n        onKeyPress: this.handleKeyPress.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"form-btn\",\n        onClick: this.handleSend.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"SEND\")));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport { Form as default };","map":{"version":3,"sources":["/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/src/components/Form/Form.js"],"names":["React","Component","Message","firebase","Form","props","state","userName","message","list","messageRef","nickDb","email","setMessageRef","listenMessages","console","log","category","database","ref","child","nextProps","json","user","setState","displayName","dbdata","nickname","bind","event","target","value","newItem","nick","push","key","handleSend","limitToLast","on","Object","values","val","map","item","index","dbemail","allUsers","handleChange","handleKeyPress"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Form.css';\nimport Message from '../Message/Message';\nimport firebase from 'firebase';\nexport default class Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: 'Stranger',\n            message: '',\n            list: [],\n            messageRef: '',\n            nickDb: '',\n            email: '',\n        };\n        // if (this.props.category === 'random') {\n        //     this.messageRef = firebase.database().ref().child('messages');\n        // }\n        // else if (this.props.category === 'disney') {\n        //     this.messageRef = firebase.database().ref().child('disney');\n        // }\n        // else {\n        //     this.messageRef = firebase.database().ref().child('messages');\n        // }\n        // console.log(\"Props Cat : \" + this.messageRef);\n        this.setMessageRef();\n        this.listenMessages();\n    }\n\n    setMessageRef() {\n        console.log(\"Props Category: \" + this.props.category);\n        if (this.props.category === 'random') {\n            this.messageRef = firebase.database().ref().child('messages');\n            // this.setState({ messageRef: firebase.database().ref().child('messages') });\n        }\n        // else if (this.props.category === 'disney') {\n        //     this.messageRef = firebase.database().ref().child('disney');\n        //     // this.setState({ messageRef: firebase.database().ref().child('disney') });\n        // }\n        else if (this.props.category === 'tvseries') {\n            this.messageRef = firebase.database().ref().child('tvseries');\n        }\n        else if (this.props.category === 'games') {\n            this.messageRef = firebase.database().ref().child('games');\n        }\n        else {\n            this.messageRef = firebase.database().ref().child('messages');\n        }\n        console.log(\"Props Cat : \" + this.messageRef);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log(\"Receive Props : \" + nextProps.json);\n        if (nextProps.user) {\n            this.setState({ 'userName': nextProps.user.displayName });\n        }\n\n\n        if (this.props.dbdata) {\n            console.log(\"DBDATA -- : \", this.props.dbdata);\n            this.setState({ 'nickDb': this.props.dbdata });\n        } else {\n            console.log(\"NICKDB -- : \", this.props.nickDb.nickname);\n            this.setState({ 'nickDb': this.props.nickDb.nickname });\n        }\n\n\n        this.setMessageRef();\n        this.listenMessages();\n    }\n\n    componentDidMount() {\n        console.log(\"FORM JS - COMPONENTDIDMOUNT-- START\");\n        this.setState({ 'userName': this.props.user.displayName });\n        this.setState({ 'email': this.props.user.email });\n\n        if (this.props.dbdata) {\n            console.log(\"DBDATA -- : \", this.props.dbdata);\n            this.setState({ 'nickDb': this.props.dbdata });\n        } else {\n            console.log(\"NICKDB -- : \", this.props.nickDb.nickname);\n            this.setState({ 'nickDb': this.props.nickDb.nickname });\n        }\n        // console.log(\"ALLUSERSSSSS: \" + JSON.stringify(this.props.allUsers));\n        this.setMessageRef.bind(this);\n        this.listenMessages();\n\n    }\n\n    handleChange(event) {\n        this.setState({ message: event.target.value });\n    }\n    handleSend() {\n        if (this.state.message) {\n            console.log(\"state msg: \" + this.state.message);\n            var newItem = {\n                userName: this.state.userName,\n                message: this.state.message,\n                email: this.state.email,\n                nick: this.state.nickDb,\n            }\n            this.messageRef.push(newItem);\n            console.log(\"HERE 2\");\n            this.setState({ message: '' });\n            console.log(\"HERE 3\");\n        }\n    }\n    handleKeyPress(event) {\n        if (event.key !== 'Enter') return;\n        this.handleSend();\n    }\n    listenMessages() {\n        console.log(\"Listen Msgs - Message Ref : \" + this.messageRef);\n        this.messageRef\n            .limitToLast(8)\n            .on('value', message => {\n                this.setState({\n                    list: Object.values(message.val()),\n                });\n                // console.log(\"LIST: \" + JSON.stringify(this.state.list));\n            });\n        // this.state.messageRef\n        //     .limitToLast(10)\n        //     .on('value', message => {\n        //         this.setState({\n        //             list: Object.values(message.val()),\n        //         });\n        //     });\n    }\n    render() {\n        return (\n            <div className=\"form\">\n                <div className=\"form-msg\">\n                    {console.log(\"DBDATA : \" + this.props.dbdata)}\n                    {this.state.list.map((item, index) =>\n                        <Message dbdata={this.props.dbdata} dbemail={this.state.dbemail} allUsers={this.props.allUsers} nickDb={this.props.nickDb} key={index} message={item} />\n                    )}\n                </div>\n                <div className=\"form-row\">\n                    <input\n                        className=\"form-input\"\n                        type=\"text\"\n                        placeholder=\"Drop a great entrance!\"\n                        value={this.state.message}\n                        onChange={this.handleChange.bind(this)}\n                        onKeyPress={this.handleKeyPress.bind(this)}\n                    />\n                    <button\n                        className=\"form-btn\"\n                        onClick={this.handleSend.bind(this)}\n                    >\n                        SEND\n          </button>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}