{"ast":null,"code":"import _classCallCheck from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/src/components/Message/Message.js\";\nimport React, { Component } from 'react';\nimport './Message.css';\nimport JsonFind from 'json-find';\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message(props) {\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Message).call(this, props));\n    _this.state = {\n      nickName: null,\n      dbdata: null\n    };\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"findNickOfUser\",\n    value: function findNickOfUser() {\n      var allUsers = this.props.allUsers; // console.log(\"Message - props.AllUsers: \" + allUsers);\n\n      for (var key in allUsers) {\n        if (allUsers.hasOwnProperty(key)) {\n          // console.log('RAAAAH', allUsers[key].email)\n          if (allUsers[key].email == this.props.message.email) {\n            this.setState({\n              nickName: allUsers[key].nickname\n            });\n          }\n        }\n      } // let doc = JsonFind(allUsers);\n      // console.log(\"FINDING NEMOOOOO: \" + JSON.stringify(doc.findValues('email')));\n      // for (let i = 0; i < allUsers.length; i++) {\n      //     // let obj = allUsers[i];\n      //     console.log(\"Nickname: \" + allUsers[i].email);\n      // }\n      // let searchUser = allUsers.find(user => user.email === \"pokervindelrio@gmail.com\").foo;\n      // console.log(searchUser[\"email\"]);\n\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"Message.js - DID MOUNT\");\n      this.findNickOfUser();\n      this.sortNickname();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.sortNickname();\n    }\n  }, {\n    key: \"sortNickname\",\n    value: function sortNickname() {\n      console.log(\"sortNickname - START\");\n\n      if (this.props.dbemail == this.props.message.email) {\n        this.setState({\n          dbdata: this.props.dbdata\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.props.message.nick, \":\"), this.props.message.message);\n    }\n  }]);\n\n  return Message;\n}(Component);\n\nexport default Message;","map":{"version":3,"sources":["/Users/helengrace.delrosario/Desktop/BOOTCAMP/ACTIVITIES/WEEK23/PROJECT 3/Unsolved/client/src/components/Message/Message.js"],"names":["React","Component","JsonFind","Message","props","state","nickName","dbdata","allUsers","key","hasOwnProperty","email","message","setState","nickname","console","log","findNickOfUser","sortNickname","dbemail","nick"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;;IAEMC,O;;;;;AAEF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAFe;AAMlB;;;;qCAEgB;AAEb,UAAIC,QAAQ,GAAG,KAAKJ,KAAL,CAAWI,QAA1B,CAFa,CAGb;;AAEA,WAAK,IAAIC,GAAT,IAAgBD,QAAhB,EAA0B;AACtB,YAAIA,QAAQ,CAACE,cAAT,CAAwBD,GAAxB,CAAJ,EAAkC;AAC9B;AACA,cAAID,QAAQ,CAACC,GAAD,CAAR,CAAcE,KAAd,IAAuB,KAAKP,KAAL,CAAWQ,OAAX,CAAmBD,KAA9C,EAAqD;AACjD,iBAAKE,QAAL,CAAc;AAAEP,cAAAA,QAAQ,EAAEE,QAAQ,CAACC,GAAD,CAAR,CAAcK;AAA1B,aAAd;AACH;AACJ;AACJ,OAZY,CAcb;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;;AACH;;;wCAEmB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,WAAKC,cAAL;AACA,WAAKC,YAAL;AACH;;;yCAEoB;AACjB,WAAKA,YAAL;AACH;;;mCAEc;AACXH,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,UAAI,KAAKZ,KAAL,CAAWe,OAAX,IAAsB,KAAKf,KAAL,CAAWQ,OAAX,CAAmBD,KAA7C,EAAoD;AAChD,aAAKE,QAAL,CAAc;AAAEN,UAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG;AAArB,SAAd;AACH;AAEJ;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaI;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKH,KAAL,CAAWQ,OAAX,CAAmBQ,IADxB,MAbJ,EA2CK,KAAKhB,KAAL,CAAWQ,OAAX,CAAmBA,OA3CxB,CADJ;AA+CH;;;;EAxGiBX,S;;AA4GtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Message.css';\nimport JsonFind from 'json-find';\n\nclass Message extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            nickName: null,\n            dbdata: null,\n        };\n    }\n\n    findNickOfUser() {\n\n        let allUsers = this.props.allUsers;\n        // console.log(\"Message - props.AllUsers: \" + allUsers);\n\n        for (let key in allUsers) {\n            if (allUsers.hasOwnProperty(key)) {\n                // console.log('RAAAAH', allUsers[key].email)\n                if (allUsers[key].email == this.props.message.email) {\n                    this.setState({ nickName: allUsers[key].nickname });\n                }\n            }\n        }\n\n        // let doc = JsonFind(allUsers);\n        // console.log(\"FINDING NEMOOOOO: \" + JSON.stringify(doc.findValues('email')));\n\n        // for (let i = 0; i < allUsers.length; i++) {\n        //     // let obj = allUsers[i];\n        //     console.log(\"Nickname: \" + allUsers[i].email);\n        // }\n\n\n\n        // let searchUser = allUsers.find(user => user.email === \"pokervindelrio@gmail.com\").foo;\n        // console.log(searchUser[\"email\"]);\n    }\n\n    componentDidMount() {\n        console.log(\"Message.js - DID MOUNT\");\n        this.findNickOfUser();\n        this.sortNickname();\n    }\n\n    componentDidUpdate() {\n        this.sortNickname();\n    }\n\n    sortNickname() {\n        console.log(\"sortNickname - START\");\n        if (this.props.dbemail == this.props.message.email) {\n            this.setState({ dbdata: this.props.dbdata });\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"msg\">\n                {/* {console.log(\"HEEEEEEEEEEY dbData: \" + this.props.dbdata)} */}\n\n                {/* {this.props.dbdata}: */}\n                {/* {console.log(\"HERE1111111111\")} */}\n\n                {/* {console.log(\"THIIIIIS\", this.state.dbdata)} */}\n                {/* {this.props.dbdata ? (\n                    <span className=\"author\">\n                        {console.log(\"THIIIIIS\", this.state.dbdata)}\n                        {this.state.dbdata}:\n                        </span>\n                ) : ( */}\n                <span className=\"author\">\n                    {this.props.message.nick}:\n                        </span>\n                {/* )} */}\n\n\n\n                {/* {this.props.dbdata ? (\n                    <span className=\"author\"> */}\n                {/* {this.props.dbdata}: */}\n                {/* {console.log(\"HERE1111111111\")}\n                        {this.state.nickName}:\n                        </span>\n                ) : (\n                        <span className=\"author\">\n                            {console.log(\"HERE222222222 : nickDb \" + JSON.stringify(this.props.nickDb))} */}\n                {/* {this.props.message.userName}: */}\n                {/* {this.props.nickDb ? (\n                                <span>\n                                    {console.log(\"NICKDBBBBB : state.nickName = \" + this.state.nickName)} */}\n                {/* {this.props.nickDb.nickname}: */}\n                {/* {this.state.nickName}:\n                                </span>\n                            ) : (\n                                    <span></span>\n                                )}\n\n                        </span>\n                    )\n                } */}\n                {this.props.message.message}\n            </div>\n        )\n    }\n}\n\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}